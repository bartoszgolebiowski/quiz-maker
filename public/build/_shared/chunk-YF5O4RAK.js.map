{
  "version": 3,
  "sources": ["../../../app/templates/QuestionCard.tsx", "../../../app/components/icons/Cross.tsx", "../../../app/components/ui/checkbox.tsx", "../../../node_modules/@radix-ui/react-checkbox/dist/packages/react/checkbox/src/index.ts", "../../../node_modules/@radix-ui/react-checkbox/dist/packages/react/checkbox/src/Checkbox.tsx", "../../../app/components/input/CheckboxControll.tsx", "../../../app/components/ui/alert.tsx", "../../../app/templates/QuestionCardErrors.tsx", "../../../app/templates/TemplateDetailsCard.tsx", "../../../app/templates/TemplateDetailsCardErrors.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\templates\\\\\\\\QuestionCard.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\templates\\\\QuestionCard.tsx\");\n  import.meta.hot.lastModified = \"1714909641033.5547\";\n}\n// REMIX HMR END\n\nimport React from \"react\";\nimport Cross from \"~/components/icons/Cross\";\nimport Plus from \"~/components/icons/Plus\";\nimport CheckboxControll from \"~/components/input/CheckboxControll\";\nimport InputControll from \"~/components/input/InputControll\";\nimport { Label } from \"~/components/ui/label\";\nimport TextAreaControll from \"~/components/input/TextAreaControll\";\nimport { Button } from \"~/components/ui/button\";\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"~/components/ui/tooltip\";\nimport { Card, CardContent, CardFooter, CardHeader } from \"~/components/ui/card\";\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nconst QuestionCard = props => {\n  const {\n    disabled = false,\n    readOnly = false,\n    children,\n    question,\n    deleteQuestion = noop,\n    updateQuestionText = noop,\n    appendAnswer = noop,\n    deleteAnswer = noop,\n    updateAnswer = noop,\n    updateCorrectAnswer = noop\n  } = props;\n  return <Card className=\"mb-10\">\r\n      <fieldset disabled={disabled}>\r\n        <CardHeader>\r\n          <h3 className=\"text-xl font-semibold tracking-tight\">\r\n            Question {question.no + 1}\r\n          </h3>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <TextAreaControll label=\"Question *\" id={`question-${question.no}`} value={question.question} onChange={e => updateQuestionText(question.no, e.target.value)} className=\"h-24\" disabled={readOnly} />\r\n          <div className=\"pb-6\">\r\n            <Label className=\"flex justify-start my-4\">Answers *</Label>\r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Button className=\"mr-4\" onClick={() => appendAnswer(question.no)} disabled={readOnly} aria-label={`Add answer to question ${question.no}`}>\r\n                    <Plus />\r\n                  </Button>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>New answer</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n          </div>\r\n\r\n          {Object.entries(question.answers).map(([answerNo, answer], index) => <div key={answerNo} className=\"flex items-center mb-2\">\r\n              <CheckboxControll checked={index === question.correct} id={`answer-checkbox-${question.no}-${answerNo}`} disabled={readOnly} onClick={() => updateCorrectAnswer(question.no, index)} className=\"size-6\" innerProps={{\n            wrapperProps: {\n              className: \"mr-2 !w-auto\"\n            }\n          }} aria-label={`Check ${answerNo} from question ${question.no}`} />\r\n              <InputControll type=\"text\" id={`answer-text-${question.no}-${answerNo}`} value={answer} onChange={e => updateAnswer(question.no, index, e.target.value)} innerProps={{\n            labelProps: {\n              className: \"sr-only\"\n            },\n            wrapperProps: {\n              className: \"flex-grow mr-2\"\n            }\n          }} disabled={readOnly} maxLength={511} label={`Answer ${answerNo}`} />\r\n              <TooltipProvider>\r\n                <Tooltip>\r\n                  <TooltipTrigger asChild>\r\n                    <Button variant=\"destructive\" onClick={() => deleteAnswer(question.no, index)} disabled={readOnly} aria-label={`Delete ${answerNo} from question ${question.no}`}>\r\n                      <Cross />\r\n                    </Button>\r\n                  </TooltipTrigger>\r\n                  <TooltipContent>\r\n                    <p>Delete answer</p>\r\n                  </TooltipContent>\r\n                </Tooltip>\r\n              </TooltipProvider>\r\n            </div>)}\r\n          {children}\r\n        </CardContent>\r\n        <CardFooter className=\"card-actions justify-start\">\r\n          <TooltipProvider>\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button variant=\"destructive\" onClick={() => deleteQuestion(question.no)} disabled={readOnly} aria-label={`Delete question ${question.no}`}>\r\n                  <Cross />\r\n                </Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent>\r\n                <p>Delete question</p>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n          </TooltipProvider>\r\n        </CardFooter>\r\n      </fieldset>\r\n    </Card>;\n};\n_c = QuestionCard;\nexport default _c2 = React.memo(QuestionCard, (prev, next) => prev.question === next.question && prev.disabled === next.disabled);\nvar _c, _c2;\n$RefreshReg$(_c, \"QuestionCard\");\n$RefreshReg$(_c2, \"%default%\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\icons\\\\\\\\Cross.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\icons\\\\Cross.tsx\");\n  import.meta.hot.lastModified = \"1704491091361.343\";\n}\n// REMIX HMR END\n\nimport React from \"react\";\nconst Cross = () => {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18 18 6M6 6l12 12\" />\r\n    </svg>;\n};\n_c = Cross;\nexport default Cross;\nvar _c;\n$RefreshReg$(_c, \"Cross\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\ui\\\\\\\\checkbox.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\ui\\\\checkbox.tsx\");\n  import.meta.hot.lastModified = \"1704552867251.7842\";\n}\n// REMIX HMR END\n\nimport * as React from \"react\";\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\";\nimport { CheckIcon } from \"@radix-ui/react-icons\";\nimport { cn } from \"~/components/css\";\nconst Checkbox = React.forwardRef(_c = ({\n  className,\n  ...props\n}, ref) => <CheckboxPrimitive.Root ref={ref} className={cn(\"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\", className)} {...props}>\r\n    <CheckboxPrimitive.Indicator className={cn(\"flex items-center justify-center text-current\")}>\r\n      <CheckIcon className=\"h-4 w-4\" />\r\n    </CheckboxPrimitive.Indicator>\r\n  </CheckboxPrimitive.Root>);\n_c2 = Checkbox;\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\nexport { Checkbox };\nvar _c, _c2;\n$RefreshReg$(_c, \"Checkbox$React.forwardRef\");\n$RefreshReg$(_c2, \"Checkbox\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "export {\n  createCheckboxScope,\n  //\n  Checkbox,\n  CheckboxIndicator,\n  //\n  Root,\n  Indicator,\n} from './Checkbox';\nexport type { CheckboxProps, CheckboxIndicatorProps } from './Checkbox';\n", "import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Checkbox\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_NAME = 'Checkbox';\n\ntype ScopedProps<P> = P & { __scopeCheckbox?: Scope };\nconst [createCheckboxContext, createCheckboxScope] = createContextScope(CHECKBOX_NAME);\n\ntype CheckedState = boolean | 'indeterminate';\n\ntype CheckboxContextValue = {\n  state: CheckedState;\n  disabled?: boolean;\n};\n\nconst [CheckboxProvider, useCheckboxContext] =\n  createCheckboxContext<CheckboxContextValue>(CHECKBOX_NAME);\n\ntype CheckboxElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface CheckboxProps extends Omit<PrimitiveButtonProps, 'checked' | 'defaultChecked'> {\n  checked?: CheckedState;\n  defaultChecked?: CheckedState;\n  required?: boolean;\n  onCheckedChange?(checked: CheckedState): void;\n}\n\nconst Checkbox = React.forwardRef<CheckboxElement, CheckboxProps>(\n  (props: ScopedProps<CheckboxProps>, forwardedRef) => {\n    const {\n      __scopeCheckbox,\n      name,\n      checked: checkedProp,\n      defaultChecked,\n      required,\n      disabled,\n      value = 'on',\n      onCheckedChange,\n      ...checkboxProps\n    } = props;\n    const [button, setButton] = React.useState<HTMLButtonElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    // We set this to true by default so that events bubble to forms without JS (SSR)\n    const isFormControl = button ? Boolean(button.closest('form')) : true;\n    const [checked = false, setChecked] = useControllableState({\n      prop: checkedProp,\n      defaultProp: defaultChecked,\n      onChange: onCheckedChange,\n    });\n    const initialCheckedStateRef = React.useRef(checked);\n    React.useEffect(() => {\n      const form = button?.form;\n      if (form) {\n        const reset = () => setChecked(initialCheckedStateRef.current);\n        form.addEventListener('reset', reset);\n        return () => form.removeEventListener('reset', reset);\n      }\n    }, [button, setChecked]);\n\n    return (\n      <CheckboxProvider scope={__scopeCheckbox} state={checked} disabled={disabled}>\n        <Primitive.button\n          type=\"button\"\n          role=\"checkbox\"\n          aria-checked={isIndeterminate(checked) ? 'mixed' : checked}\n          aria-required={required}\n          data-state={getState(checked)}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          value={value}\n          {...checkboxProps}\n          ref={composedRefs}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            // According to WAI ARIA, Checkboxes don't activate on enter keypress\n            if (event.key === 'Enter') event.preventDefault();\n          })}\n          onClick={composeEventHandlers(props.onClick, (event) => {\n            setChecked((prevChecked) => (isIndeterminate(prevChecked) ? true : !prevChecked));\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              // if checkbox is in a form, stop propagation from the button so that we only propagate\n              // one click event (from the input). We propagate changes from an input so that native\n              // form validation works and form events reflect checkbox updates.\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })}\n        />\n        {isFormControl && (\n          <BubbleInput\n            control={button}\n            bubbles={!hasConsumerStoppedPropagationRef.current}\n            name={name}\n            value={value}\n            checked={checked}\n            required={required}\n            disabled={disabled}\n            // We transform because the input is absolutely positioned but we have\n            // rendered it **after** the button. This pulls it back to sit on top\n            // of the button.\n            style={{ transform: 'translateX(-100%)' }}\n          />\n        )}\n      </CheckboxProvider>\n    );\n  }\n);\n\nCheckbox.displayName = CHECKBOX_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CheckboxIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'CheckboxIndicator';\n\ntype CheckboxIndicatorElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface CheckboxIndicatorProps extends PrimitiveSpanProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst CheckboxIndicator = React.forwardRef<CheckboxIndicatorElement, CheckboxIndicatorProps>(\n  (props: ScopedProps<CheckboxIndicatorProps>, forwardedRef) => {\n    const { __scopeCheckbox, forceMount, ...indicatorProps } = props;\n    const context = useCheckboxContext(INDICATOR_NAME, __scopeCheckbox);\n    return (\n      <Presence present={forceMount || isIndeterminate(context.state) || context.state === true}>\n        <Primitive.span\n          data-state={getState(context.state)}\n          data-disabled={context.disabled ? '' : undefined}\n          {...indicatorProps}\n          ref={forwardedRef}\n          style={{ pointerEvents: 'none', ...props.style }}\n        />\n      </Presence>\n    );\n  }\n);\n\nCheckboxIndicator.displayName = INDICATOR_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype InputProps = Radix.ComponentPropsWithoutRef<'input'>;\ninterface BubbleInputProps extends Omit<InputProps, 'checked'> {\n  checked: CheckedState;\n  control: HTMLElement | null;\n  bubbles: boolean;\n}\n\nconst BubbleInput = (props: BubbleInputProps) => {\n  const { control, checked, bubbles = true, ...inputProps } = props;\n  const ref = React.useRef<HTMLInputElement>(null);\n  const prevChecked = usePrevious(checked);\n  const controlSize = useSize(control);\n\n  // Bubble checked change to parents (e.g form change event)\n  React.useEffect(() => {\n    const input = ref.current!;\n    const inputProto = window.HTMLInputElement.prototype;\n    const descriptor = Object.getOwnPropertyDescriptor(inputProto, 'checked') as PropertyDescriptor;\n    const setChecked = descriptor.set;\n\n    if (prevChecked !== checked && setChecked) {\n      const event = new Event('click', { bubbles });\n      input.indeterminate = isIndeterminate(checked);\n      setChecked.call(input, isIndeterminate(checked) ? false : checked);\n      input.dispatchEvent(event);\n    }\n  }, [prevChecked, checked, bubbles]);\n\n  return (\n    <input\n      type=\"checkbox\"\n      aria-hidden\n      defaultChecked={isIndeterminate(checked) ? false : checked}\n      {...inputProps}\n      tabIndex={-1}\n      ref={ref}\n      style={{\n        ...props.style,\n        ...controlSize,\n        position: 'absolute',\n        pointerEvents: 'none',\n        opacity: 0,\n        margin: 0,\n      }}\n    />\n  );\n};\n\nfunction isIndeterminate(checked?: CheckedState): checked is 'indeterminate' {\n  return checked === 'indeterminate';\n}\n\nfunction getState(checked: CheckedState) {\n  return isIndeterminate(checked) ? 'indeterminate' : checked ? 'checked' : 'unchecked';\n}\n\nconst Root = Checkbox;\nconst Indicator = CheckboxIndicator;\n\nexport {\n  createCheckboxScope,\n  //\n  Checkbox,\n  CheckboxIndicator,\n  //\n  Root,\n  Indicator,\n};\nexport type { CheckboxProps, CheckboxIndicatorProps };\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\input\\\\\\\\CheckboxControll.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\input\\\\CheckboxControll.tsx\");\n  import.meta.hot.lastModified = \"1714909200547.9614\";\n}\n// REMIX HMR END\n\nimport clsx from \"clsx\";\nimport * as React from \"react\";\nimport { Label } from \"../ui/label\";\nimport { Checkbox } from \"../ui/checkbox\";\nconst CheckboxControll = props => {\n  const {\n    innerProps = {\n      wrapperProps: {},\n      labelProps: {}\n    },\n    label,\n    ...rest\n  } = props;\n  return <div {...innerProps.wrapperProps} className={clsx(\"w-full\", innerProps?.wrapperProps?.className)}>\r\n      {label ? <Label {...innerProps.labelProps} htmlFor={rest.id}>\r\n          {label}\r\n        </Label> : null}\r\n      <Checkbox {...rest} />\r\n    </div>;\n};\n_c = CheckboxControll;\nCheckboxControll.displayName = \"CheckboxControll\";\nexport default CheckboxControll;\nvar _c;\n$RefreshReg$(_c, \"CheckboxControll\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\ui\\\\\\\\alert.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\ui\\\\alert.tsx\");\n  import.meta.hot.lastModified = \"1714908983545.0552\";\n}\n// REMIX HMR END\n\nimport * as React from \"react\";\nimport { cva } from \"class-variance-authority\";\nimport { cn } from \"~/components/css\";\nconst alertVariants = cva(\"relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7\", {\n  variants: {\n    variant: {\n      default: \"bg-background text-foreground\",\n      destructive: \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\"\n    }\n  },\n  defaultVariants: {\n    variant: \"default\"\n  }\n});\nconst Alert = React.forwardRef(_c = ({\n  className,\n  variant,\n  ...props\n}, ref) => <div ref={ref} role=\"alert\" className={cn(alertVariants({\n  variant\n}), className)} {...props} />);\n_c2 = Alert;\nAlert.displayName = \"Alert\";\nconst AlertTitle = React.forwardRef(_c3 = ({\n  className,\n  ...props\n}, ref) => <h5 ref={ref} className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)} {...props} />);\n_c4 = AlertTitle;\nAlertTitle.displayName = \"AlertTitle\";\nconst AlertDescription = React.forwardRef(_c5 = ({\n  className,\n  ...props\n}, ref) => <div ref={ref} className={cn(\"text-sm [&_p]:leading-relaxed\", className)} {...props} />);\n_c6 = AlertDescription;\nAlertDescription.displayName = \"AlertDescription\";\nexport { Alert, AlertTitle, AlertDescription };\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"AlertTitle$React.forwardRef\");\n$RefreshReg$(_c4, \"AlertTitle\");\n$RefreshReg$(_c5, \"AlertDescription$React.forwardRef\");\n$RefreshReg$(_c6, \"AlertDescription\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\templates\\\\\\\\QuestionCardErrors.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\templates\\\\QuestionCardErrors.tsx\");\n  import.meta.hot.lastModified = \"1714909361341.7676\";\n}\n// REMIX HMR END\n\nimport React from \"react\";\nimport { quizContentSingleElementValidationSchema } from \"./validation\";\nimport { Alert, AlertTitle } from \"~/components/ui/alert\";\nconst QuestionCardErrors = props => {\n  const {\n    question\n  } = props;\n  const result = quizContentSingleElementValidationSchema.safeParse(question);\n  if (!result.success) {\n    return <div>\r\n        {result.error.issues.map(issue => {\n        const path = issue.path.join(\"\");\n        return <Alert key={issue.message} variant=\"destructive\" className=\"mb-2\" role=\"alert\" aria-label={`Question ${question.no} field ${path}`}>\r\n              <AlertTitle>{issue.message}</AlertTitle>\r\n            </Alert>;\n      })}\r\n      </div>;\n  }\n  return <></>;\n};\n_c = QuestionCardErrors;\nexport default _c2 = React.memo(QuestionCardErrors, (prev, next) => prev.question === next.question);\nvar _c, _c2;\n$RefreshReg$(_c, \"QuestionCardErrors\");\n$RefreshReg$(_c2, \"%default%\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\templates\\\\\\\\TemplateDetailsCard.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\templates\\\\TemplateDetailsCard.tsx\");\n  import.meta.hot.lastModified = \"1714909277572.6072\";\n}\n// REMIX HMR END\n\nimport React from \"react\";\nimport InputControll from \"~/components/input/InputControll\";\nimport TextAreaControll from \"~/components/input/TextAreaControll\";\nimport { Card, CardContent, CardHeader } from \"~/components/ui/card\";\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nconst TemplateDetailsCard = props => {\n  const {\n    title,\n    description,\n    children,\n    onChange = noop,\n    readOnly = false,\n    disabled = false\n  } = props;\n  return <Card className=\"mb-10\">\r\n      <fieldset disabled={disabled}>\r\n        <CardHeader>\r\n          <h3 className=\"text-xl font-semibold tracking-tight\">Details</h3>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <InputControll type=\"text\" id=\"title\" value={title} onChange={e => onChange(\"title\", e.target.value)} label=\"Title *\" required innerProps={{\n          wrapperProps: {\n            className: \"flex-grow mb-2\"\n          }\n        }} disabled={readOnly} maxLength={255} />\r\n          <TextAreaControll id=\"description\" label=\"Description\" value={description} onChange={e => onChange(\"description\", e.target.value)} className=\"h-24\" disabled={readOnly} maxLength={255} />\r\n          {children}\r\n        </CardContent>\r\n      </fieldset>\r\n    </Card>;\n};\n_c = TemplateDetailsCard;\nexport default _c2 = React.memo(TemplateDetailsCard, (prev, next) => prev.title === next.title && prev.description === next.description && prev.disabled === next.disabled);\nvar _c, _c2;\n$RefreshReg$(_c, \"TemplateDetailsCard\");\n$RefreshReg$(_c2, \"%default%\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\templates\\\\\\\\TemplateDetailsCardErrors.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\templates\\\\TemplateDetailsCardErrors.tsx\");\n  import.meta.hot.lastModified = \"1714909276676.473\";\n}\n// REMIX HMR END\n\nimport React from \"react\";\nimport { Alert, AlertTitle } from \"~/components/ui/alert\";\nconst TemplateDetailsCardErrors = props => {\n  const {\n    title\n  } = props;\n  if (title === \"\") {\n    return <Alert variant=\"destructive\" className=\"mt-2\" role=\"alert\" aria-label={`title field`}>\r\n        {\" \"}\r\n        <AlertTitle>Title is required</AlertTitle>\r\n      </Alert>;\n  }\n  return <></>;\n};\n_c = TemplateDetailsCardErrors;\nexport default _c2 = React.memo(TemplateDetailsCardErrors, (prev, next) => prev.title === next.title);\nvar _c, _c2;\n$RefreshReg$(_c, \"TemplateDetailsCardErrors\");\n$RefreshReg$(_c2, \"%default%\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "CHECKBOX_NAME", "createCheckboxContext", "createCheckboxScope", "createContextScope", "CheckboxProvider", "useCheckboxContext", "Checkbox", "React", "props", "forwardedRef", "checked", "checkedProp", "checkboxProps", "button", "setButton", "composedRefs", "useComposedRefs", "node", "hasConsumerStoppedPropagationRef", "isFormControl", "Boolean", "closest", "setChecked", "useControllableState", "prop", "defaultProp", "defaultChecked", "onChange", "onCheckedChange", "initialCheckedStateRef", "form", "reset", "current", "addEventListener", "removeEventListener", "$1bpvS$createElement", "__scopeCheckbox", "isIndeterminate", "required", "getState", "disabled", "undefined", "composeEventHandlers", "onKeyDown", "event", "key", "preventDefault", "onClick", "prevChecked", "isPropagationStopped", "stopPropagation", "transform", "INDICATOR_NAME", "CheckboxIndicator", "React", "props", "forwardedRef", "indicatorProps", "context", "useCheckboxContext", "__scopeCheckbox", "$1bpvS$createElement", "forceMount", "isIndeterminate", "state", "getState", "disabled", "undefined", "pointerEvents", "style", "BubbleInput", "props", "inputProps", "ref", "React", "prevChecked", "usePrevious", "checked", "controlSize", "useSize", "control", "input", "current", "inputProto", "window", "HTMLInputElement", "prototype", "descriptor", "Object", "getOwnPropertyDescriptor", "setChecked", "set", "event", "Event", "indeterminate", "isIndeterminate", "call", "dispatchEvent", "bubbles", "$1bpvS$createElement", "style", "position", "pointerEvents", "opacity", "margin", "getState", "Root", "Checkbox", "Indicator", "CheckboxIndicator", "import_jsx_dev_runtime", "_c", "_c2", "_c", "_c2", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c", "_c2", "React", "React", "import_jsx_dev_runtime", "_c", "_c2", "_c3", "_c4", "_c5", "_c", "_c2", "_c3", "_c4", "_c5", "import_react", "import_jsx_dev_runtime", "_c", "_c2", "React", "import_react", "import_jsx_dev_runtime", "noop", "_c", "_c2", "React", "import_react", "import_jsx_dev_runtime", "_c", "_c2", "React"]
}
