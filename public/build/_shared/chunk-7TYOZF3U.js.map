{
  "version": 3,
  "sources": ["../../../node_modules/sonner/src/index.tsx", "../../../node_modules/sonner/node_modules/.pnpm/dompurify@3.0.10/node_modules/dompurify/src/utils.js", "../../../node_modules/sonner/node_modules/.pnpm/dompurify@3.0.10/node_modules/dompurify/src/tags.js", "../../../node_modules/sonner/node_modules/.pnpm/dompurify@3.0.10/node_modules/dompurify/src/attrs.js", "../../../node_modules/sonner/node_modules/.pnpm/dompurify@3.0.10/node_modules/dompurify/src/regexp.js", "../../../node_modules/sonner/node_modules/.pnpm/dompurify@3.0.10/node_modules/dompurify/src/purify.js", "../../../node_modules/sonner/src/assets.tsx", "../../../node_modules/sonner/src/hooks.tsx", "../../../node_modules/sonner/src/state.ts", "../../../node_modules/sonner/dist/#style-inject:#style-inject", "../../../node_modules/sonner/src/styles.css", "../../../node_modules/sonner/src/types.ts"],
  "sourcesContent": ["'use client';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport DOMPurify from 'dompurify';\nimport { getAsset, Loader } from './assets';\nimport { useIsDocumentHidden } from './hooks';\nimport { toast, ToastState } from './state';\nimport './styles.css';\nimport {\n  isAction,\n  type ExternalToast,\n  type HeightT,\n  type ToasterProps,\n  type ToastProps,\n  type ToastT,\n  type ToastToDismiss,\n} from './types';\n\n// Visible toasts amount\nconst VISIBLE_TOASTS_AMOUNT = 3;\n\n// Viewport padding\nconst VIEWPORT_OFFSET = '32px';\n\n// Default lifetime of a toasts (in ms)\nconst TOAST_LIFETIME = 4000;\n\n// Default toast width\nconst TOAST_WIDTH = 356;\n\n// Default gap between toasts\nconst GAP = 14;\n\n// Threshold to dismiss a toast\nconst SWIPE_THRESHOLD = 20;\n\n// Equal to exit animation duration\nconst TIME_BEFORE_UNMOUNT = 200;\n\nfunction _cn(...classes: (string | undefined)[]) {\n  return classes.filter(Boolean).join(' ');\n}\n\nconst Toast = (props: ToastProps) => {\n  const {\n    invert: ToasterInvert,\n    toast,\n    unstyled,\n    interacting,\n    setHeights,\n    visibleToasts,\n    heights,\n    index,\n    toasts,\n    expanded,\n    removeToast,\n    closeButton: closeButtonFromToaster,\n    style,\n    cancelButtonStyle,\n    actionButtonStyle,\n    className = '',\n    descriptionClassName = '',\n    duration: durationFromToaster,\n    position,\n    gap,\n    loadingIcon: loadingIconProp,\n    expandByDefault,\n    classNames,\n    icons,\n    closeButtonAriaLabel = 'Close toast',\n    pauseWhenPageIsHidden,\n    cn,\n  } = props;\n  const [mounted, setMounted] = React.useState(false);\n  const [removed, setRemoved] = React.useState(false);\n  const [swiping, setSwiping] = React.useState(false);\n  const [swipeOut, setSwipeOut] = React.useState(false);\n  const [offsetBeforeRemove, setOffsetBeforeRemove] = React.useState(0);\n  const [initialHeight, setInitialHeight] = React.useState(0);\n  const dragStartTime = React.useRef<Date | null>(null);\n  const toastRef = React.useRef<HTMLLIElement>(null);\n  const isFront = index === 0;\n  const isVisible = index + 1 <= visibleToasts;\n  const toastType = toast.type;\n  const dismissible = toast.dismissible !== false;\n  const toastClassname = toast.className || '';\n  const toastDescriptionClassname = toast.descriptionClassName || '';\n  // Height index is used to calculate the offset as it gets updated before the toast array, which means we can calculate the new layout faster.\n  const heightIndex = React.useMemo(\n    () => heights.findIndex((height) => height.toastId === toast.id) || 0,\n    [heights, toast.id],\n  );\n  const closeButton = React.useMemo(\n    () => toast.closeButton ?? closeButtonFromToaster,\n    [toast.closeButton, closeButtonFromToaster],\n  );\n  const duration = React.useMemo(\n    () => toast.duration || durationFromToaster || TOAST_LIFETIME,\n    [toast.duration, durationFromToaster],\n  );\n  const closeTimerStartTimeRef = React.useRef(0);\n  const offset = React.useRef(0);\n  const lastCloseTimerStartTimeRef = React.useRef(0);\n  const pointerStartRef = React.useRef<{ x: number; y: number } | null>(null);\n  const [y, x] = position.split('-');\n  const toastsHeightBefore = React.useMemo(() => {\n    return heights.reduce((prev, curr, reducerIndex) => {\n      // Calculate offset up until current  toast\n      if (reducerIndex >= heightIndex) {\n        return prev;\n      }\n\n      return prev + curr.height;\n    }, 0);\n  }, [heights, heightIndex]);\n  const isDocumentHidden = useIsDocumentHidden();\n\n  const invert = toast.invert || ToasterInvert;\n  const disabled = toastType === 'loading';\n\n  offset.current = React.useMemo(() => heightIndex * gap + toastsHeightBefore, [heightIndex, toastsHeightBefore]);\n\n  React.useEffect(() => {\n    // Trigger enter animation without using CSS animation\n    setMounted(true);\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (!mounted) return;\n    const toastNode = toastRef.current;\n    const originalHeight = toastNode.style.height;\n    toastNode.style.height = 'auto';\n    const newHeight = toastNode.getBoundingClientRect().height;\n    toastNode.style.height = originalHeight;\n\n    setInitialHeight(newHeight);\n\n    setHeights((heights) => {\n      const alreadyExists = heights.find((height) => height.toastId === toast.id);\n      if (!alreadyExists) {\n        return [{ toastId: toast.id, height: newHeight, position: toast.position }, ...heights];\n      } else {\n        return heights.map((height) => (height.toastId === toast.id ? { ...height, height: newHeight } : height));\n      }\n    });\n  }, [mounted, toast.title, toast.description, setHeights, toast.id]);\n\n  const deleteToast = React.useCallback(() => {\n    // Save the offset for the exit swipe animation\n    setRemoved(true);\n    setOffsetBeforeRemove(offset.current);\n    setHeights((h) => h.filter((height) => height.toastId !== toast.id));\n\n    setTimeout(() => {\n      removeToast(toast);\n    }, TIME_BEFORE_UNMOUNT);\n  }, [toast, removeToast, setHeights, offset]);\n\n  React.useEffect(() => {\n    if ((toast.promise && toastType === 'loading') || toast.duration === Infinity || toast.type === 'loading') return;\n    let timeoutId: NodeJS.Timeout;\n    let remainingTime = duration;\n\n    // Pause the timer on each hover\n    const pauseTimer = () => {\n      if (lastCloseTimerStartTimeRef.current < closeTimerStartTimeRef.current) {\n        // Get the elapsed time since the timer started\n        const elapsedTime = new Date().getTime() - closeTimerStartTimeRef.current;\n\n        remainingTime = remainingTime - elapsedTime;\n      }\n\n      lastCloseTimerStartTimeRef.current = new Date().getTime();\n    };\n\n    const startTimer = () => {\n      // setTimeout(, Infinity) behaves as if the delay is 0.\n      // As a result, the toast would be closed immediately, giving the appearance that it was never rendered.\n      // See: https://github.com/denysdovhan/wtfjs?tab=readme-ov-file#an-infinite-timeout\n      if (remainingTime === Infinity) return;\n\n      closeTimerStartTimeRef.current = new Date().getTime();\n\n      // Let the toast know it has started\n      timeoutId = setTimeout(() => {\n        toast.onAutoClose?.(toast);\n        deleteToast();\n      }, remainingTime);\n    };\n\n    if (expanded || interacting || (pauseWhenPageIsHidden && isDocumentHidden)) {\n      pauseTimer();\n    } else {\n      startTimer();\n    }\n\n    return () => clearTimeout(timeoutId);\n  }, [\n    expanded,\n    interacting,\n    expandByDefault,\n    toast,\n    duration,\n    deleteToast,\n    toast.promise,\n    toastType,\n    pauseWhenPageIsHidden,\n    isDocumentHidden,\n  ]);\n\n  React.useEffect(() => {\n    const toastNode = toastRef.current;\n\n    if (toastNode) {\n      const height = toastNode.getBoundingClientRect().height;\n\n      // Add toast height tot heights array after the toast is mounted\n      setInitialHeight(height);\n      setHeights((h) => [{ toastId: toast.id, height, position: toast.position }, ...h]);\n\n      return () => setHeights((h) => h.filter((height) => height.toastId !== toast.id));\n    }\n  }, [setHeights, toast.id]);\n\n  React.useEffect(() => {\n    if (toast.delete) {\n      deleteToast();\n    }\n  }, [deleteToast, toast.delete]);\n\n  function getLoadingIcon() {\n    if (icons?.loading) {\n      return (\n        <div className=\"sonner-loader\" data-visible={toastType === 'loading'}>\n          {icons.loading}\n        </div>\n      );\n    }\n\n    if (loadingIconProp) {\n      return (\n        <div className=\"sonner-loader\" data-visible={toastType === 'loading'}>\n          {loadingIconProp}\n        </div>\n      );\n    }\n    return <Loader visible={toastType === 'loading'} />;\n  }\n\n  function sanitizeHTML(html: string): { __html: string } {\n    return { __html: DOMPurify.sanitize(html) };\n  }\n\n  return (\n    <li\n      aria-live={toast.important ? 'assertive' : 'polite'}\n      aria-atomic=\"true\"\n      role=\"status\"\n      tabIndex={0}\n      ref={toastRef}\n      className={cn(\n        className,\n        toastClassname,\n        classNames?.toast,\n        toast?.classNames?.toast,\n        classNames?.default,\n        classNames?.[toastType],\n        toast?.classNames?.[toastType],\n      )}\n      data-sonner-toast=\"\"\n      data-styled={!Boolean(toast.jsx || toast.unstyled || unstyled)}\n      data-mounted={mounted}\n      data-promise={Boolean(toast.promise)}\n      data-removed={removed}\n      data-visible={isVisible}\n      data-y-position={y}\n      data-x-position={x}\n      data-index={index}\n      data-front={isFront}\n      data-swiping={swiping}\n      data-dismissible={dismissible}\n      data-type={toastType}\n      data-invert={invert}\n      data-swipe-out={swipeOut}\n      data-expanded={Boolean(expanded || (expandByDefault && mounted))}\n      style={\n        {\n          '--index': index,\n          '--toasts-before': index,\n          '--z-index': toasts.length - index,\n          '--offset': `${removed ? offsetBeforeRemove : offset.current}px`,\n          '--initial-height': expandByDefault ? 'auto' : `${initialHeight}px`,\n          ...style,\n          ...toast.style,\n        } as React.CSSProperties\n      }\n      onPointerDown={(event) => {\n        if (disabled || !dismissible) return;\n        dragStartTime.current = new Date();\n        setOffsetBeforeRemove(offset.current);\n        // Ensure we maintain correct pointer capture even when going outside of the toast (e.g. when swiping)\n        (event.target as HTMLElement).setPointerCapture(event.pointerId);\n        if ((event.target as HTMLElement).tagName === 'BUTTON') return;\n        setSwiping(true);\n        pointerStartRef.current = { x: event.clientX, y: event.clientY };\n      }}\n      onPointerUp={() => {\n        if (swipeOut || !dismissible) return;\n\n        pointerStartRef.current = null;\n        const swipeAmount = Number(toastRef.current?.style.getPropertyValue('--swipe-amount').replace('px', '') || 0);\n        const timeTaken = new Date().getTime() - dragStartTime.current?.getTime();\n        const velocity = Math.abs(swipeAmount) / timeTaken;\n\n        // Remove only if threshold is met\n        if (Math.abs(swipeAmount) >= SWIPE_THRESHOLD || velocity > 0.11) {\n          setOffsetBeforeRemove(offset.current);\n          toast.onDismiss?.(toast);\n          deleteToast();\n          setSwipeOut(true);\n          return;\n        }\n\n        toastRef.current?.style.setProperty('--swipe-amount', '0px');\n        setSwiping(false);\n      }}\n      onPointerMove={(event) => {\n        if (!pointerStartRef.current || !dismissible) return;\n\n        const yPosition = event.clientY - pointerStartRef.current.y;\n        const xPosition = event.clientX - pointerStartRef.current.x;\n\n        const clamp = y === 'top' ? Math.min : Math.max;\n        const clampedY = clamp(0, yPosition);\n        const swipeStartThreshold = event.pointerType === 'touch' ? 10 : 2;\n        const isAllowedToSwipe = Math.abs(clampedY) > swipeStartThreshold;\n\n        if (isAllowedToSwipe) {\n          toastRef.current?.style.setProperty('--swipe-amount', `${yPosition}px`);\n        } else if (Math.abs(xPosition) > swipeStartThreshold) {\n          // User is swiping in wrong direction so we disable swipe gesture\n          // for the current pointer down interaction\n          pointerStartRef.current = null;\n        }\n      }}\n    >\n      {closeButton && !toast.jsx ? (\n        <button\n          aria-label={closeButtonAriaLabel}\n          data-disabled={disabled}\n          data-close-button\n          onClick={\n            disabled || !dismissible\n              ? () => {}\n              : () => {\n                  deleteToast();\n                  toast.onDismiss?.(toast);\n                }\n          }\n          className={cn(classNames?.closeButton, toast?.classNames?.closeButton)}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"12\"\n            height=\"12\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          >\n            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n          </svg>\n        </button>\n      ) : null}\n      {toast.jsx || React.isValidElement(toast.title) ? (\n        toast.jsx || toast.title\n      ) : (\n        <>\n          {toastType || toast.icon || toast.promise ? (\n            <div data-icon=\"\" className={cn(classNames?.icon)}>\n              {toast.promise || (toast.type === 'loading' && !toast.icon) ? toast.icon || getLoadingIcon() : null}\n              {toast.type !== 'loading' ? toast.icon || icons?.[toastType] || getAsset(toastType) : null}\n            </div>\n          ) : null}\n\n          <div data-content=\"\" className={cn(classNames?.content)}>\n            <div\n              data-title=\"\"\n              className={cn(classNames?.title, toast?.classNames?.title)}\n              dangerouslySetInnerHTML={sanitizeHTML(toast.title as string)}\n            ></div>\n            {toast.description ? (\n              <div\n                data-description=\"\"\n                className={cn(\n                  descriptionClassName,\n                  toastDescriptionClassname,\n                  classNames?.description,\n                  toast?.classNames?.description,\n                )}\n                dangerouslySetInnerHTML={sanitizeHTML(toast.description as string)}\n              ></div>\n            ) : null}\n          </div>\n          {React.isValidElement(toast.cancel) ? (\n            toast.cancel\n          ) : toast.cancel && isAction(toast.cancel) ? (\n            <button\n              data-button\n              data-cancel\n              style={toast.cancelButtonStyle || cancelButtonStyle}\n              onClick={(event) => {\n                // We need to check twice because typescript\n                if (!isAction(toast.cancel)) return;\n                if (!dismissible) return;\n                deleteToast();\n                toast.cancel.onClick(event);\n              }}\n              className={cn(classNames?.cancelButton, toast?.classNames?.cancelButton)}\n            >\n              {toast.cancel.label}\n            </button>\n          ) : null}\n          {React.isValidElement(toast.action) ? (\n            toast.action\n          ) : toast.action && isAction(toast.action) ? (\n            <button\n              data-button=\"\"\n              style={toast.actionButtonStyle || actionButtonStyle}\n              onClick={(event) => {\n                // We need to check twice because typescript\n                if (!isAction(toast.action)) return;\n                toast.action.onClick(event);\n                if (event.defaultPrevented) return;\n                deleteToast();\n              }}\n              className={cn(classNames?.actionButton, toast?.classNames?.actionButton)}\n            >\n              {toast.action.label}\n            </button>\n          ) : null}\n        </>\n      )}\n    </li>\n  );\n};\n\nfunction getDocumentDirection(): ToasterProps['dir'] {\n  if (typeof window === 'undefined') return 'ltr';\n  if (typeof document === 'undefined') return 'ltr'; // For Fresh purpose\n\n  const dirAttribute = document.documentElement.getAttribute('dir');\n\n  if (dirAttribute === 'auto' || !dirAttribute) {\n    return window.getComputedStyle(document.documentElement).direction as ToasterProps['dir'];\n  }\n\n  return dirAttribute as ToasterProps['dir'];\n}\n\nconst Toaster = (props: ToasterProps) => {\n  const {\n    invert,\n    position = 'bottom-right',\n    hotkey = ['altKey', 'KeyT'],\n    expand,\n    closeButton,\n    className,\n    offset,\n    theme = 'light',\n    richColors,\n    duration,\n    style,\n    visibleToasts = VISIBLE_TOASTS_AMOUNT,\n    toastOptions,\n    dir = getDocumentDirection(),\n    gap = GAP,\n    loadingIcon,\n    icons,\n    containerAriaLabel = 'Notifications',\n    pauseWhenPageIsHidden,\n    cn = _cn,\n  } = props;\n  const [toasts, setToasts] = React.useState<ToastT[]>([]);\n  const possiblePositions = React.useMemo(() => {\n    return Array.from(\n      new Set([position].concat(toasts.filter((toast) => toast.position).map((toast) => toast.position))),\n    );\n  }, [toasts, position]);\n  const [heights, setHeights] = React.useState<HeightT[]>([]);\n  const [expanded, setExpanded] = React.useState(false);\n  const [interacting, setInteracting] = React.useState(false);\n  const [actualTheme, setActualTheme] = React.useState(\n    theme !== 'system'\n      ? theme\n      : typeof window !== 'undefined'\n      ? window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches\n        ? 'dark'\n        : 'light'\n      : 'light',\n  );\n\n  const listRef = React.useRef<HTMLOListElement>(null);\n  const hotkeyLabel = hotkey.join('+').replace(/Key/g, '').replace(/Digit/g, '');\n  const lastFocusedElementRef = React.useRef<HTMLElement>(null);\n  const isFocusWithinRef = React.useRef(false);\n\n  const removeToast = React.useCallback(\n    (toast: ToastT) => setToasts((toasts) => toasts.filter(({ id }) => id !== toast.id)),\n    [],\n  );\n\n  React.useEffect(() => {\n    return ToastState.subscribe((toast) => {\n      if ((toast as ToastToDismiss).dismiss) {\n        setToasts((toasts) => toasts.map((t) => (t.id === toast.id ? { ...t, delete: true } : t)));\n        return;\n      }\n\n      // Prevent batching, temp solution.\n      setTimeout(() => {\n        ReactDOM.flushSync(() => {\n          setToasts((toasts) => {\n            const indexOfExistingToast = toasts.findIndex((t) => t.id === toast.id);\n\n            // Update the toast if it already exists\n            if (indexOfExistingToast !== -1) {\n              return [\n                ...toasts.slice(0, indexOfExistingToast),\n                { ...toasts[indexOfExistingToast], ...toast },\n                ...toasts.slice(indexOfExistingToast + 1),\n              ];\n            }\n\n            return [toast, ...toasts];\n          });\n        });\n      });\n    });\n  }, []);\n\n  React.useEffect(() => {\n    if (theme !== 'system') {\n      setActualTheme(theme);\n      return;\n    }\n\n    if (theme === 'system') {\n      // check if current preference is dark\n      if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n        // it's currently dark\n        setActualTheme('dark');\n      } else {\n        // it's not dark\n        setActualTheme('light');\n      }\n    }\n\n    if (typeof window === 'undefined') return;\n\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', ({ matches }) => {\n      if (matches) {\n        setActualTheme('dark');\n      } else {\n        setActualTheme('light');\n      }\n    });\n  }, [theme]);\n\n  React.useEffect(() => {\n    // Ensure expanded is always false when no toasts are present / only one left\n    if (toasts.length <= 1) {\n      setExpanded(false);\n    }\n  }, [toasts]);\n\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      const isHotkeyPressed = hotkey.every((key) => (event as any)[key] || event.code === key);\n\n      if (isHotkeyPressed) {\n        setExpanded(true);\n        listRef.current?.focus();\n      }\n\n      if (\n        event.code === 'Escape' &&\n        (document.activeElement === listRef.current || listRef.current?.contains(document.activeElement))\n      ) {\n        setExpanded(false);\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [hotkey]);\n\n  React.useEffect(() => {\n    if (listRef.current) {\n      return () => {\n        if (lastFocusedElementRef.current) {\n          lastFocusedElementRef.current.focus({ preventScroll: true });\n          lastFocusedElementRef.current = null;\n          isFocusWithinRef.current = false;\n        }\n      };\n    }\n  }, [listRef.current]);\n\n  if (!toasts.length) return null;\n\n  return (\n    // Remove item from normal navigation flow, only available via hotkey\n    <section aria-label={`${containerAriaLabel} ${hotkeyLabel}`} tabIndex={-1}>\n      {possiblePositions.map((position, index) => {\n        const [y, x] = position.split('-');\n        return (\n          <ol\n            key={position}\n            dir={dir === 'auto' ? getDocumentDirection() : dir}\n            tabIndex={-1}\n            ref={listRef}\n            className={className}\n            data-sonner-toaster\n            data-theme={actualTheme}\n            data-rich-colors={richColors}\n            data-y-position={y}\n            data-x-position={x}\n            style={\n              {\n                '--front-toast-height': `${heights[0]?.height || 0}px`,\n                '--offset': typeof offset === 'number' ? `${offset}px` : offset || VIEWPORT_OFFSET,\n                '--width': `${TOAST_WIDTH}px`,\n                '--gap': `${gap}px`,\n                ...style,\n              } as React.CSSProperties\n            }\n            onBlur={(event) => {\n              if (isFocusWithinRef.current && !event.currentTarget.contains(event.relatedTarget)) {\n                isFocusWithinRef.current = false;\n                if (lastFocusedElementRef.current) {\n                  lastFocusedElementRef.current.focus({ preventScroll: true });\n                  lastFocusedElementRef.current = null;\n                }\n              }\n            }}\n            onFocus={(event) => {\n              const isNotDismissible =\n                event.target instanceof HTMLElement && event.target.dataset.dismissible === 'false';\n\n              if (isNotDismissible) return;\n\n              if (!isFocusWithinRef.current) {\n                isFocusWithinRef.current = true;\n                lastFocusedElementRef.current = event.relatedTarget as HTMLElement;\n              }\n            }}\n            onMouseEnter={() => setExpanded(true)}\n            onMouseMove={() => setExpanded(true)}\n            onMouseLeave={() => {\n              // Avoid setting expanded to false when interacting with a toast, e.g. swiping\n              if (!interacting) {\n                setExpanded(false);\n              }\n            }}\n            onPointerDown={(event) => {\n              const isNotDismissible =\n                event.target instanceof HTMLElement && event.target.dataset.dismissible === 'false';\n\n              if (isNotDismissible) return;\n              setInteracting(true);\n            }}\n            onPointerUp={() => setInteracting(false)}\n          >\n            {toasts\n              .filter((toast) => (!toast.position && index === 0) || toast.position === position)\n              .map((toast, index) => (\n                <Toast\n                  key={toast.id}\n                  icons={icons}\n                  index={index}\n                  toast={toast}\n                  duration={toastOptions?.duration ?? duration}\n                  className={toastOptions?.className}\n                  descriptionClassName={toastOptions?.descriptionClassName}\n                  invert={invert}\n                  visibleToasts={visibleToasts}\n                  closeButton={toastOptions?.closeButton ?? closeButton}\n                  interacting={interacting}\n                  position={position}\n                  style={toastOptions?.style}\n                  unstyled={toastOptions?.unstyled}\n                  classNames={toastOptions?.classNames}\n                  cancelButtonStyle={toastOptions?.cancelButtonStyle}\n                  actionButtonStyle={toastOptions?.actionButtonStyle}\n                  removeToast={removeToast}\n                  toasts={toasts.filter((t) => t.position == toast.position)}\n                  heights={heights.filter((h) => h.position == toast.position)}\n                  setHeights={setHeights}\n                  expandByDefault={expand}\n                  gap={gap}\n                  loadingIcon={loadingIcon}\n                  expanded={expanded}\n                  pauseWhenPageIsHidden={pauseWhenPageIsHidden}\n                  cn={cn}\n                />\n              ))}\n          </ol>\n        );\n      })}\n    </section>\n  );\n};\nexport { toast, Toaster, type ExternalToast, type ToastT };\n", "const {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param {Function} func - The function to be wrapped and called.\n * @returns {Function} A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param {Function} func - The constructor function to be wrapped and called.\n * @returns {Function} A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/**\n * Add properties to a lookup table\n *\n * @param {Object} set - The set to which elements will be added.\n * @param {Array} array - The array containing elements to be added to the set.\n * @param {Function} transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns {Object} The modified set with added elements.\n */\nfunction addToSet(set, array, transformCaseFunc = stringToLowerCase) {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/**\n * Clean up an array to harden against CSPP\n *\n * @param {Array} array - The array to be cleaned.\n * @returns {Array} The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n\n  return array;\n}\n\n/**\n * Shallow clone an object\n *\n * @param {Object} object - The object to be cloned.\n * @returns {Object} A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (\n        value &&\n        typeof value === 'object' &&\n        value.constructor === Object\n      ) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n\n  return newObject;\n}\n\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param {Object} object - The object to look up the getter function in its prototype chain.\n * @param {String} prop - The property name for which to find the getter function.\n * @returns {Function} The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue() {\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  entries,\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  clone,\n  create,\n  objectHasOwnProperty,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n  addToSet,\n  // Reflect\n  unapply,\n  unconstruct,\n};\n", "import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n  'mprescripts',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n", "import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n", "import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nexport const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nexport const DOCTYPE_NAME = seal(/^html$/i);\nexport const CUSTOM_ELEMENT = seal(/^[a-z][a-z\\d]*(-[a-z\\d]+)+$/i);\n", "import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  entries,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n  create,\n  objectHasOwnProperty,\n} from './utils.js';\n\nconst getGlobal = function () {\n  return typeof window === 'undefined' ? null : window;\n};\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return {TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, purifyHostElement) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  let { document } = window;\n\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof entries === 'function' &&\n    typeof getParentNode === 'function' &&\n    implementation &&\n    implementation.createHTMLDocument !== undefined;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(\n    create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet(\n    {},\n    [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE],\n    stringToString\n  );\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg = {}) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? DEFAULT_PARSER_MEDIA_TYPE\n        : cfg.PARSER_MEDIA_TYPE;\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? stringToString\n        : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS')\n      ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc)\n      : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR')\n      ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc)\n      : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES')\n      ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString)\n      : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR')\n      ? addToSet(\n          clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n          cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n          transformCaseFunc // eslint-disable-line indent\n        ) // eslint-disable-line indent\n      : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS')\n      ? addToSet(\n          clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n          cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n          transformCaseFunc // eslint-disable-line indent\n        ) // eslint-disable-line indent\n      : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS')\n      ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc)\n      : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS')\n      ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc)\n      : {};\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR')\n      ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc)\n      : {};\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES')\n      ? cfg.USE_PROFILES\n      : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || EXPRESSIONS.IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, TAGS.text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate(\n          'TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.'\n        );\n      }\n\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate(\n          'TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.'\n        );\n      }\n\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(\n          trustedTypes,\n          currentScript\n        );\n      }\n\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n    'title',\n    'style',\n    'font',\n    'a',\n    'script',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.svgDisallowed,\n  ]);\n  const ALL_MATHML_TAGS = addToSet({}, [\n    ...TAGS.mathMl,\n    ...TAGS.mathMlDisallowed,\n  ]);\n\n  /**\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      ALLOWED_NAMESPACES[element.namespaceURI]\n    ) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      node.remove();\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      NAMESPACE === HTML_NAMESPACE\n    ) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT\n          ? emptyHTML\n          : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param  {Node} root The root element or node to start traversing on.\n   * @return {NodeIterator} The created NodeIterator\n   */\n  const _createNodeIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT |\n        NodeFilter.SHOW_COMMENT |\n        NodeFilter.SHOW_TEXT |\n        NodeFilter.SHOW_PROCESSING_INSTRUCTION,\n      null\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    return (\n      elm instanceof HTMLFormElement &&\n      (typeof elm.nodeName !== 'string' ||\n        typeof elm.textContent !== 'string' ||\n        typeof elm.removeChild !== 'function' ||\n        !(elm.attributes instanceof NamedNodeMap) ||\n        typeof elm.removeAttribute !== 'function' ||\n        typeof elm.setAttribute !== 'function' ||\n        typeof elm.namespaceURI !== 'string' ||\n        typeof elm.insertBefore !== 'function' ||\n        typeof elm.hasChildNodes !== 'function')\n    );\n  };\n\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param  {Node} object object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'function' && object instanceof Node;\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content = null;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      currentNode.hasChildNodes() &&\n      !_isNode(currentNode.firstElementChild) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        ) {\n          return false;\n        }\n\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        ) {\n          return false;\n        }\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if (\n      (tagName === 'noscript' ||\n        tagName === 'noembed' ||\n        tagName === 'noframes') &&\n      regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n        content = stringReplace(content, expr, ' ');\n      });\n\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_isBasicCustomElement(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n    } else if (value) {\n      return false;\n    } else {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    }\n\n    return true;\n  };\n\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param {string} tagName name of the tag of the node to sanitize\n   * @returns {boolean} Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function (tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    let l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const { name, namespaceURI, value: attrValue } = attr;\n      const lcName = transformCaseFunc(name);\n\n      let value = name === 'value' ? attrValue : stringTrim(attrValue);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (\n        trustedTypesPolicy &&\n        typeof trustedTypes === 'object' &&\n        typeof trustedTypes.getAttributeType === 'function'\n      ) {\n        if (namespaceURI) {\n          /* Namespaces are not yet supported, see https://bugs.chromium.org/p/chromium/issues/detail?id=1305293 */\n        } else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML': {\n              value = trustedTypesPolicy.createHTML(value);\n              break;\n            }\n\n            case 'TrustedScriptURL': {\n              value = trustedTypesPolicy.createScriptURL(value);\n              break;\n            }\n\n            default: {\n              break;\n            }\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} cfg object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg = {}) {\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n    }\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (\n      WHOLE_DOCUMENT &&\n      ALLOWED_TAGS['!doctype'] &&\n      body.ownerDocument &&\n      body.ownerDocument.doctype &&\n      body.ownerDocument.doctype.name &&\n      regExpTest(EXPRESSIONS.DOCTYPE_NAME, body.ownerDocument.doctype.name)\n    ) {\n      serializedHTML =\n        '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg = {}) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {String} tag Tag name of containing element.\n   * @param  {String} attr Attribute name.\n   * @param  {String} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n", "'use client';\nimport React from 'react';\nimport type { ToastTypes } from './types';\n\nexport const getAsset = (type: ToastTypes): JSX.Element | null => {\n  switch (type) {\n    case 'success':\n      return SuccessIcon;\n\n    case 'info':\n      return InfoIcon;\n\n    case 'warning':\n      return WarningIcon;\n\n    case 'error':\n      return ErrorIcon;\n\n    default:\n      return null;\n  }\n};\n\nconst bars = Array(12).fill(0);\n\nexport const Loader = ({ visible }: { visible: boolean }) => {\n  return (\n    <div className=\"sonner-loading-wrapper\" data-visible={visible}>\n      <div className=\"sonner-spinner\">\n        {bars.map((_, i) => (\n          <div className=\"sonner-loading-bar\" key={`spinner-bar-${i}`} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst SuccessIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" height=\"20\" width=\"20\">\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\n\nconst WarningIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" height=\"20\" width=\"20\">\n    <path\n      fillRule=\"evenodd\"\n      d=\"M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\n\nconst InfoIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" height=\"20\" width=\"20\">\n    <path\n      fillRule=\"evenodd\"\n      d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\n\nconst ErrorIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" height=\"20\" width=\"20\">\n    <path\n      fillRule=\"evenodd\"\n      d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5A.75.75 0 0110 5zm0 10a1 1 0 100-2 1 1 0 000 2z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\n", "import React from 'react';\n\nexport const useIsDocumentHidden = () => {\n  const [isDocumentHidden, setIsDocumentHidden] = React.useState(false);\n\n  React.useEffect(() => {\n    const callback = () => {\n      setIsDocumentHidden(document.hidden);\n    };\n    document.addEventListener('visibilitychange', callback);\n    return () => window.removeEventListener('visibilitychange', callback);\n  }, []);\n\n  return isDocumentHidden;\n};\n", "import React from 'react';\nimport type { ExternalToast, ToastT, PromiseData, PromiseT, ToastToDismiss, ToastTypes } from './types';\n\nlet toastsCounter = 1;\n\nclass Observer {\n  subscribers: Array<(toast: ExternalToast | ToastToDismiss) => void>;\n  toasts: Array<ToastT | ToastToDismiss>;\n\n  constructor() {\n    this.subscribers = [];\n    this.toasts = [];\n  }\n\n  // We use arrow functions to maintain the correct `this` reference\n  subscribe = (subscriber: (toast: ToastT | ToastToDismiss) => void) => {\n    this.subscribers.push(subscriber);\n\n    return () => {\n      const index = this.subscribers.indexOf(subscriber);\n      this.subscribers.splice(index, 1);\n    };\n  };\n\n  publish = (data: ToastT) => {\n    this.subscribers.forEach((subscriber) => subscriber(data));\n  };\n\n  addToast = (data: ToastT) => {\n    this.publish(data);\n    this.toasts = [...this.toasts, data];\n  };\n\n  create = (\n    data: ExternalToast & {\n      message?: string | React.ReactNode;\n      type?: ToastTypes;\n      promise?: PromiseT;\n      jsx?: React.ReactElement;\n    },\n  ) => {\n    const { message, ...rest } = data;\n    const id = typeof data?.id === 'number' || data.id?.length > 0 ? data.id : toastsCounter++;\n    const alreadyExists = this.toasts.find((toast) => {\n      return toast.id === id;\n    });\n    const dismissible = data.dismissible === undefined ? true : data.dismissible;\n\n    if (alreadyExists) {\n      this.toasts = this.toasts.map((toast) => {\n        if (toast.id === id) {\n          this.publish({ ...toast, ...data, id, title: message });\n          return {\n            ...toast,\n            ...data,\n            id,\n            dismissible,\n            title: message,\n          };\n        }\n\n        return toast;\n      });\n    } else {\n      this.addToast({ title: message, ...rest, dismissible, id });\n    }\n\n    return id;\n  };\n\n  dismiss = (id?: number | string) => {\n    if (!id) {\n      this.toasts.forEach((toast) => {\n        this.subscribers.forEach((subscriber) => subscriber({ id: toast.id, dismiss: true }));\n      });\n    }\n\n    this.subscribers.forEach((subscriber) => subscriber({ id, dismiss: true }));\n    return id;\n  };\n\n  message = (message: string | React.ReactNode, data?: ExternalToast) => {\n    return this.create({ ...data, message });\n  };\n\n  error = (message: string | React.ReactNode, data?: ExternalToast) => {\n    return this.create({ ...data, message, type: 'error' });\n  };\n\n  success = (message: string | React.ReactNode, data?: ExternalToast) => {\n    return this.create({ ...data, type: 'success', message });\n  };\n\n  info = (message: string | React.ReactNode, data?: ExternalToast) => {\n    return this.create({ ...data, type: 'info', message });\n  };\n\n  warning = (message: string | React.ReactNode, data?: ExternalToast) => {\n    return this.create({ ...data, type: 'warning', message });\n  };\n\n  loading = (message: string | React.ReactNode, data?: ExternalToast) => {\n    return this.create({ ...data, type: 'loading', message });\n  };\n\n  promise = <ToastData>(promise: PromiseT<ToastData>, data?: PromiseData<ToastData>) => {\n    if (!data) {\n      // Nothing to show\n      return;\n    }\n\n    let id: string | number | undefined = undefined;\n    if (data.loading !== undefined) {\n      id = this.create({\n        ...data,\n        promise,\n        type: 'loading',\n        message: data.loading,\n        description: typeof data.description !== 'function' ? data.description : undefined,\n      });\n    }\n\n    const p = promise instanceof Promise ? promise : promise();\n\n    let shouldDismiss = id !== undefined;\n\n    p.then((response) => {\n      // TODO: Clean up TS here, response has incorrect type\n      // @ts-expect-error\n      if (response && typeof response.ok === 'boolean' && !response.ok) {\n        shouldDismiss = false;\n        const message =\n          // @ts-expect-error\n          typeof data.error === 'function' ? data.error(`HTTP error! status: ${response.status}`) : data.error;\n        const description =\n          typeof data.description === 'function'\n            ? // @ts-expect-error\n              data.description(`HTTP error! status: ${response.status}`)\n            : data.description;\n        this.create({ id, type: 'error', message, description });\n      } else if (data.success !== undefined) {\n        shouldDismiss = false;\n        const message = typeof data.success === 'function' ? data.success(response) : data.success;\n        const description = typeof data.description === 'function' ? data.description(response) : data.description;\n        this.create({ id, type: 'success', message, description });\n      }\n    })\n      .catch((error) => {\n        if (data.error !== undefined) {\n          shouldDismiss = false;\n          const message = typeof data.error === 'function' ? data.error(error) : data.error;\n          const description = typeof data.description === 'function' ? data.description(error) : data.description;\n          this.create({ id, type: 'error', message, description });\n        }\n      })\n      .finally(() => {\n        if (shouldDismiss) {\n          // Toast is still in load state (and will be indefinitely — dismiss it)\n          this.dismiss(id);\n          id = undefined;\n        }\n\n        data.finally?.();\n      });\n\n    return id;\n  };\n\n  custom = (jsx: (id: number | string) => React.ReactElement, data?: ExternalToast) => {\n    const id = data?.id || toastsCounter++;\n    this.create({ jsx: jsx(id), id, ...data });\n    return id;\n  };\n}\n\nexport const ToastState = new Observer();\n\n// bind this to the toast function\nconst toastFunction = (message: string | React.ReactNode, data?: ExternalToast) => {\n  const id = data?.id || toastsCounter++;\n\n  ToastState.addToast({\n    title: message,\n    ...data,\n    id,\n  });\n  return id;\n};\n\nconst basicToast = toastFunction;\n\n// We use `Object.assign` to maintain the correct types as we would lose them otherwise\nexport const toast = Object.assign(basicToast, {\n  success: ToastState.success,\n  info: ToastState.info,\n  warning: ToastState.warning,\n  error: ToastState.error,\n  custom: ToastState.custom,\n  message: ToastState.message,\n  promise: ToastState.promise,\n  dismiss: ToastState.dismiss,\n  loading: ToastState.loading,\n});\n", "\n          export default function styleInject(css, { insertAt } = {}) {\n            if (!css || typeof document === 'undefined') return\n          \n            const head = document.head || document.getElementsByTagName('head')[0]\n            const style = document.createElement('style')\n            style.type = 'text/css'\n          \n            if (insertAt === 'top') {\n              if (head.firstChild) {\n                head.insertBefore(style, head.firstChild)\n              } else {\n                head.appendChild(style)\n              }\n            } else {\n              head.appendChild(style)\n            }\n          \n            if (style.styleSheet) {\n              style.styleSheet.cssText = css\n            } else {\n              style.appendChild(document.createTextNode(css))\n            }\n          }\n          ", "import styleInject from '#style-inject';styleInject(\":where(html[dir=\\\"ltr\\\"]),:where([data-sonner-toaster][dir=\\\"ltr\\\"]){--toast-icon-margin-start: -3px;--toast-icon-margin-end: 4px;--toast-svg-margin-start: -1px;--toast-svg-margin-end: 0px;--toast-button-margin-start: auto;--toast-button-margin-end: 0;--toast-close-button-start: 0;--toast-close-button-end: unset;--toast-close-button-transform: translate(-35%, -35%)}:where(html[dir=\\\"rtl\\\"]),:where([data-sonner-toaster][dir=\\\"rtl\\\"]){--toast-icon-margin-start: 4px;--toast-icon-margin-end: -3px;--toast-svg-margin-start: 0px;--toast-svg-margin-end: -1px;--toast-button-margin-start: 0;--toast-button-margin-end: auto;--toast-close-button-start: unset;--toast-close-button-end: 0;--toast-close-button-transform: translate(35%, -35%)}:where([data-sonner-toaster]){position:fixed;width:var(--width);font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;--gray1: hsl(0, 0%, 99%);--gray2: hsl(0, 0%, 97.3%);--gray3: hsl(0, 0%, 95.1%);--gray4: hsl(0, 0%, 93%);--gray5: hsl(0, 0%, 90.9%);--gray6: hsl(0, 0%, 88.7%);--gray7: hsl(0, 0%, 85.8%);--gray8: hsl(0, 0%, 78%);--gray9: hsl(0, 0%, 56.1%);--gray10: hsl(0, 0%, 52.3%);--gray11: hsl(0, 0%, 43.5%);--gray12: hsl(0, 0%, 9%);--border-radius: 8px;box-sizing:border-box;padding:0;margin:0;list-style:none;outline:none;z-index:999999999}:where([data-sonner-toaster][data-x-position=\\\"right\\\"]){right:max(var(--offset),env(safe-area-inset-right))}:where([data-sonner-toaster][data-x-position=\\\"left\\\"]){left:max(var(--offset),env(safe-area-inset-left))}:where([data-sonner-toaster][data-x-position=\\\"center\\\"]){left:50%;transform:translate(-50%)}:where([data-sonner-toaster][data-y-position=\\\"top\\\"]){top:max(var(--offset),env(safe-area-inset-top))}:where([data-sonner-toaster][data-y-position=\\\"bottom\\\"]){bottom:max(var(--offset),env(safe-area-inset-bottom))}:where([data-sonner-toast]){--y: translateY(100%);--lift-amount: calc(var(--lift) * var(--gap));z-index:var(--z-index);position:absolute;opacity:0;transform:var(--y);filter:blur(0);touch-action:none;transition:transform .4s,opacity .4s,height .4s,box-shadow .2s;box-sizing:border-box;outline:none;overflow-wrap:anywhere}:where([data-sonner-toast][data-styled=\\\"true\\\"]){padding:16px;background:var(--normal-bg);border:1px solid var(--normal-border);color:var(--normal-text);border-radius:var(--border-radius);box-shadow:0 4px 12px #0000001a;width:var(--width);font-size:13px;display:flex;align-items:center;gap:6px}:where([data-sonner-toast]:focus-visible){box-shadow:0 4px 12px #0000001a,0 0 0 2px #0003}:where([data-sonner-toast][data-y-position=\\\"top\\\"]){top:0;--y: translateY(-100%);--lift: 1;--lift-amount: calc(1 * var(--gap))}:where([data-sonner-toast][data-y-position=\\\"bottom\\\"]){bottom:0;--y: translateY(100%);--lift: -1;--lift-amount: calc(var(--lift) * var(--gap))}:where([data-sonner-toast]) :where([data-description]){font-weight:400;line-height:1.4;color:inherit}:where([data-sonner-toast]) :where([data-title]){font-weight:500;line-height:1.5;color:inherit}:where([data-sonner-toast]) :where([data-icon]){display:flex;height:16px;width:16px;position:relative;justify-content:flex-start;align-items:center;flex-shrink:0;margin-left:var(--toast-icon-margin-start);margin-right:var(--toast-icon-margin-end)}:where([data-sonner-toast][data-promise=\\\"true\\\"]) :where([data-icon])>svg{opacity:0;transform:scale(.8);transform-origin:center;animation:sonner-fade-in .3s ease forwards}:where([data-sonner-toast]) :where([data-icon])>*{flex-shrink:0}:where([data-sonner-toast]) :where([data-icon]) svg{margin-left:var(--toast-svg-margin-start);margin-right:var(--toast-svg-margin-end)}:where([data-sonner-toast]) :where([data-content]){display:flex;flex-direction:column;gap:2px}[data-sonner-toast][data-styled=true] [data-button]{border-radius:4px;padding-left:8px;padding-right:8px;height:24px;font-size:12px;color:var(--normal-bg);background:var(--normal-text);margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end);border:none;cursor:pointer;outline:none;display:flex;align-items:center;flex-shrink:0;transition:opacity .4s,box-shadow .2s}:where([data-sonner-toast]) :where([data-button]):focus-visible{box-shadow:0 0 0 2px #0006}:where([data-sonner-toast]) :where([data-button]):first-of-type{margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end)}:where([data-sonner-toast]) :where([data-cancel]){color:var(--normal-text);background:rgba(0,0,0,.08)}:where([data-sonner-toast][data-theme=\\\"dark\\\"]) :where([data-cancel]){background:rgba(255,255,255,.3)}:where([data-sonner-toast]) :where([data-close-button]){position:absolute;left:var(--toast-close-button-start);right:var(--toast-close-button-end);top:0;height:20px;width:20px;display:flex;justify-content:center;align-items:center;padding:0;background:var(--gray1);color:var(--gray12);border:1px solid var(--gray4);transform:var(--toast-close-button-transform);border-radius:50%;cursor:pointer;z-index:1;transition:opacity .1s,background .2s,border-color .2s}:where([data-sonner-toast]) :where([data-close-button]):focus-visible{box-shadow:0 4px 12px #0000001a,0 0 0 2px #0003}:where([data-sonner-toast]) :where([data-disabled=\\\"true\\\"]){cursor:not-allowed}:where([data-sonner-toast]):hover :where([data-close-button]):hover{background:var(--gray2);border-color:var(--gray5)}:where([data-sonner-toast][data-swiping=\\\"true\\\"]):before{content:\\\"\\\";position:absolute;left:0;right:0;height:100%;z-index:-1}:where([data-sonner-toast][data-y-position=\\\"top\\\"][data-swiping=\\\"true\\\"]):before{bottom:50%;transform:scaleY(3) translateY(50%)}:where([data-sonner-toast][data-y-position=\\\"bottom\\\"][data-swiping=\\\"true\\\"]):before{top:50%;transform:scaleY(3) translateY(-50%)}:where([data-sonner-toast][data-swiping=\\\"false\\\"][data-removed=\\\"true\\\"]):before{content:\\\"\\\";position:absolute;inset:0;transform:scaleY(2)}:where([data-sonner-toast]):after{content:\\\"\\\";position:absolute;left:0;height:calc(var(--gap) + 1px);bottom:100%;width:100%}:where([data-sonner-toast][data-mounted=\\\"true\\\"]){--y: translateY(0);opacity:1}:where([data-sonner-toast][data-expanded=\\\"false\\\"][data-front=\\\"false\\\"]){--scale: var(--toasts-before) * .05 + 1;--y: translateY(calc(var(--lift-amount) * var(--toasts-before))) scale(calc(-1 * var(--scale)));height:var(--front-toast-height)}:where([data-sonner-toast])>*{transition:opacity .4s}:where([data-sonner-toast][data-expanded=\\\"false\\\"][data-front=\\\"false\\\"][data-styled=\\\"true\\\"])>*{opacity:0}:where([data-sonner-toast][data-visible=\\\"false\\\"]){opacity:0;pointer-events:none}:where([data-sonner-toast][data-mounted=\\\"true\\\"][data-expanded=\\\"true\\\"]){--y: translateY(calc(var(--lift) * var(--offset)));height:var(--initial-height)}:where([data-sonner-toast][data-removed=\\\"true\\\"][data-front=\\\"true\\\"][data-swipe-out=\\\"false\\\"]){--y: translateY(calc(var(--lift) * -100%));opacity:0}:where([data-sonner-toast][data-removed=\\\"true\\\"][data-front=\\\"false\\\"][data-swipe-out=\\\"false\\\"][data-expanded=\\\"true\\\"]){--y: translateY(calc(var(--lift) * var(--offset) + var(--lift) * -100%));opacity:0}:where([data-sonner-toast][data-removed=\\\"true\\\"][data-front=\\\"false\\\"][data-swipe-out=\\\"false\\\"][data-expanded=\\\"false\\\"]){--y: translateY(40%);opacity:0;transition:transform .5s,opacity .2s}:where([data-sonner-toast][data-removed=\\\"true\\\"][data-front=\\\"false\\\"]):before{height:calc(var(--initial-height) + 20%)}[data-sonner-toast][data-swiping=true]{transform:var(--y) translateY(var(--swipe-amount, 0px));transition:none}[data-sonner-toast][data-swipe-out=true][data-y-position=bottom],[data-sonner-toast][data-swipe-out=true][data-y-position=top]{animation:swipe-out .2s ease-out forwards}@keyframes swipe-out{0%{transform:translateY(calc(var(--lift) * var(--offset) + var(--swipe-amount)));opacity:1}to{transform:translateY(calc(var(--lift) * var(--offset) + var(--swipe-amount) + var(--lift) * -100%));opacity:0}}@media (max-width: 600px){[data-sonner-toaster]{position:fixed;--mobile-offset: 16px;right:var(--mobile-offset);left:var(--mobile-offset);width:100%}[data-sonner-toaster] [data-sonner-toast]{left:0;right:0;width:calc(100% - var(--mobile-offset) * 2)}[data-sonner-toaster][data-x-position=left]{left:var(--mobile-offset)}[data-sonner-toaster][data-y-position=bottom]{bottom:20px}[data-sonner-toaster][data-y-position=top]{top:20px}[data-sonner-toaster][data-x-position=center]{left:var(--mobile-offset);right:var(--mobile-offset);transform:none}}[data-sonner-toaster][data-theme=light]{--normal-bg: #fff;--normal-border: var(--gray4);--normal-text: var(--gray12);--success-bg: hsl(143, 85%, 96%);--success-border: hsl(145, 92%, 91%);--success-text: hsl(140, 100%, 27%);--info-bg: hsl(208, 100%, 97%);--info-border: hsl(221, 91%, 91%);--info-text: hsl(210, 92%, 45%);--warning-bg: hsl(49, 100%, 97%);--warning-border: hsl(49, 91%, 91%);--warning-text: hsl(31, 92%, 45%);--error-bg: hsl(359, 100%, 97%);--error-border: hsl(359, 100%, 94%);--error-text: hsl(360, 100%, 45%)}[data-sonner-toaster][data-theme=light] [data-sonner-toast][data-invert=true]{--normal-bg: #000;--normal-border: hsl(0, 0%, 20%);--normal-text: var(--gray1)}[data-sonner-toaster][data-theme=dark] [data-sonner-toast][data-invert=true]{--normal-bg: #fff;--normal-border: var(--gray3);--normal-text: var(--gray12)}[data-sonner-toaster][data-theme=dark]{--normal-bg: #000;--normal-border: hsl(0, 0%, 20%);--normal-text: var(--gray1);--success-bg: hsl(150, 100%, 6%);--success-border: hsl(147, 100%, 12%);--success-text: hsl(150, 86%, 65%);--info-bg: hsl(215, 100%, 6%);--info-border: hsl(223, 100%, 12%);--info-text: hsl(216, 87%, 65%);--warning-bg: hsl(64, 100%, 6%);--warning-border: hsl(60, 100%, 12%);--warning-text: hsl(46, 87%, 65%);--error-bg: hsl(358, 76%, 10%);--error-border: hsl(357, 89%, 16%);--error-text: hsl(358, 100%, 81%)}[data-rich-colors=true] [data-sonner-toast][data-type=success],[data-rich-colors=true] [data-sonner-toast][data-type=success] [data-close-button]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true] [data-sonner-toast][data-type=info],[data-rich-colors=true] [data-sonner-toast][data-type=info] [data-close-button]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true] [data-sonner-toast][data-type=warning],[data-rich-colors=true] [data-sonner-toast][data-type=warning] [data-close-button]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true] [data-sonner-toast][data-type=error],[data-rich-colors=true] [data-sonner-toast][data-type=error] [data-close-button]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}.sonner-loading-wrapper{--size: 16px;height:var(--size);width:var(--size);position:absolute;inset:0;z-index:10}.sonner-loading-wrapper[data-visible=false]{transform-origin:center;animation:sonner-fade-out .2s ease forwards}.sonner-spinner{position:relative;top:50%;left:50%;height:var(--size);width:var(--size)}.sonner-loading-bar{animation:sonner-spin 1.2s linear infinite;background:var(--gray11);border-radius:6px;height:8%;left:-10%;position:absolute;top:-3.9%;width:24%}.sonner-loading-bar:nth-child(1){animation-delay:-1.2s;transform:rotate(.0001deg) translate(146%)}.sonner-loading-bar:nth-child(2){animation-delay:-1.1s;transform:rotate(30deg) translate(146%)}.sonner-loading-bar:nth-child(3){animation-delay:-1s;transform:rotate(60deg) translate(146%)}.sonner-loading-bar:nth-child(4){animation-delay:-.9s;transform:rotate(90deg) translate(146%)}.sonner-loading-bar:nth-child(5){animation-delay:-.8s;transform:rotate(120deg) translate(146%)}.sonner-loading-bar:nth-child(6){animation-delay:-.7s;transform:rotate(150deg) translate(146%)}.sonner-loading-bar:nth-child(7){animation-delay:-.6s;transform:rotate(180deg) translate(146%)}.sonner-loading-bar:nth-child(8){animation-delay:-.5s;transform:rotate(210deg) translate(146%)}.sonner-loading-bar:nth-child(9){animation-delay:-.4s;transform:rotate(240deg) translate(146%)}.sonner-loading-bar:nth-child(10){animation-delay:-.3s;transform:rotate(270deg) translate(146%)}.sonner-loading-bar:nth-child(11){animation-delay:-.2s;transform:rotate(300deg) translate(146%)}.sonner-loading-bar:nth-child(12){animation-delay:-.1s;transform:rotate(330deg) translate(146%)}@keyframes sonner-fade-in{0%{opacity:0;transform:scale(.8)}to{opacity:1;transform:scale(1)}}@keyframes sonner-fade-out{0%{opacity:1;transform:scale(1)}to{opacity:0;transform:scale(.8)}}@keyframes sonner-spin{0%{opacity:1}to{opacity:.15}}@media (prefers-reduced-motion){[data-sonner-toast],[data-sonner-toast]>*,.sonner-loading-bar{transition:none!important;animation:none!important}}.sonner-loader{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);transform-origin:center;transition:opacity .2s,transform .2s}.sonner-loader[data-visible=false]{opacity:0;transform:scale(.8) translate(-50%,-50%)}\\n\")", "import React from 'react';\n\nexport type ToastTypes = 'normal' | 'action' | 'success' | 'info' | 'warning' | 'error' | 'loading' | 'default';\n\nexport type PromiseT<Data = any> = Promise<Data> | (() => Promise<Data>);\n\nexport type PromiseExternalToast = Omit<ExternalToast, 'description'>;\n\nexport type PromiseData<ToastData = any> = PromiseExternalToast & {\n  loading?: string | React.ReactNode;\n  success?: string | React.ReactNode | ((data: ToastData) => React.ReactNode | string);\n  error?: string | React.ReactNode | ((error: any) => React.ReactNode | string);\n  description?: string | React.ReactNode | ((data: any) => React.ReactNode | string);\n  finally?: () => void | Promise<void>;\n};\n\nexport interface ToastClassnames {\n  toast?: string;\n  title?: string;\n  description?: string;\n  loader?: string;\n  closeButton?: string;\n  cancelButton?: string;\n  actionButton?: string;\n  success?: string;\n  error?: string;\n  info?: string;\n  warning?: string;\n  loading?: string;\n  default?: string;\n  content?: string;\n  icon?: string;\n}\n\nexport interface ToastIcons {\n  success?: React.ReactNode;\n  info?: React.ReactNode;\n  warning?: React.ReactNode;\n  error?: React.ReactNode;\n  loading?: React.ReactNode;\n}\n\ninterface Action {\n  label: string;\n  onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  actionButtonStyle?: React.CSSProperties;\n}\n\nexport interface ToastT {\n  id: number | string;\n  title?: string | React.ReactNode;\n  type?: ToastTypes;\n  icon?: React.ReactNode;\n  jsx?: React.ReactNode;\n  invert?: boolean;\n  closeButton?: boolean;\n  dismissible?: boolean;\n  description?: React.ReactNode;\n  duration?: number;\n  delete?: boolean;\n  important?: boolean;\n  action?: Action | React.ReactNode;\n  cancel?: Action | React.ReactNode;\n  onDismiss?: (toast: ToastT) => void;\n  onAutoClose?: (toast: ToastT) => void;\n  promise?: PromiseT;\n  cancelButtonStyle?: React.CSSProperties;\n  actionButtonStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  unstyled?: boolean;\n  className?: string;\n  classNames?: ToastClassnames;\n  descriptionClassName?: string;\n  position?: Position;\n}\n\nexport function isAction(action: Action | React.ReactNode): action is Action {\n  return (action as Action).label !== undefined && typeof (action as Action).onClick === 'function';\n}\n\nexport type Position = 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right' | 'top-center' | 'bottom-center';\nexport interface HeightT {\n  height: number;\n  toastId: number | string;\n  position: Position;\n}\n\ninterface ToastOptions {\n  className?: string;\n  closeButton?: boolean;\n  descriptionClassName?: string;\n  style?: React.CSSProperties;\n  cancelButtonStyle?: React.CSSProperties;\n  actionButtonStyle?: React.CSSProperties;\n  duration?: number;\n  unstyled?: boolean;\n  classNames?: ToastClassnames;\n}\n\ntype CnFunction = (...classes: Array<string | undefined>) => string;\n\nexport interface ToasterProps {\n  invert?: boolean;\n  theme?: 'light' | 'dark' | 'system';\n  position?: Position;\n  hotkey?: string[];\n  richColors?: boolean;\n  expand?: boolean;\n  duration?: number;\n  gap?: number;\n  visibleToasts?: number;\n  closeButton?: boolean;\n  toastOptions?: ToastOptions;\n  className?: string;\n  style?: React.CSSProperties;\n  offset?: string | number;\n  dir?: 'rtl' | 'ltr' | 'auto';\n  /**\n   * @deprecated Please use the `icons` prop instead:\n   * ```jsx\n   * <Toaster\n   *   icons={{ loading: <LoadingIcon /> }}\n   * />\n   * ```\n   */\n  loadingIcon?: React.ReactNode;\n  icons?: ToastIcons;\n  containerAriaLabel?: string;\n  pauseWhenPageIsHidden?: boolean;\n  cn?: CnFunction;\n}\n\nexport interface ToastProps {\n  toast: ToastT;\n  toasts: ToastT[];\n  index: number;\n  expanded: boolean;\n  invert: boolean;\n  heights: HeightT[];\n  setHeights: React.Dispatch<React.SetStateAction<HeightT[]>>;\n  removeToast: (toast: ToastT) => void;\n  gap?: number;\n  position: Position;\n  visibleToasts: number;\n  expandByDefault: boolean;\n  closeButton: boolean;\n  interacting: boolean;\n  style?: React.CSSProperties;\n  cancelButtonStyle?: React.CSSProperties;\n  actionButtonStyle?: React.CSSProperties;\n  duration?: number;\n  className?: string;\n  unstyled?: boolean;\n  descriptionClassName?: string;\n  loadingIcon?: React.ReactNode;\n  classNames?: ToastClassnames;\n  icons?: ToastIcons;\n  closeButtonAriaLabel?: string;\n  pauseWhenPageIsHidden: boolean;\n  cn: CnFunction;\n}\n\nexport enum SwipeStateTypes {\n  SwipedOut = 'SwipedOut',\n  SwipedBack = 'SwipedBack',\n  NotSwiped = 'NotSwiped',\n}\n\nexport type Theme = 'light' | 'dark';\n\nexport interface ToastToDismiss {\n  id: number | string;\n  dismiss: boolean;\n}\n\nexport type ExternalToast = Omit<ToastT, 'id' | 'type' | 'title' | 'jsx' | 'delete' | 'promise'> & {\n  id?: number | string;\n};\n"],
  "mappings": ";;;;;;;;;;;AAEA,mBAAkB;AAClB,uBAAqB;AMYZ,IAAAA,gBAGL;AETF,IAAAA,gBAMA;;APfF,IACEC,EAAAA,SACAC,IAAAA,gBACAC,IAAAA,UACAC,IAAAA,gBACAC,IAAAA,0BAGIC,GAAAA,IAAAA;AARN,IAQcC,EAAMC,QAAO,GAAIC,MAC3B,GAAEC,QAAOC,GAAAA,IAAAA;AATb,IAS2B,EAAA,OAAOC,IAAAA,WAAY,GAAA,IAAeA,OAExDN,WACM,eACAO;AAKF,MAAA,IAAa,SACXA,GAINH;AAAAA,SACK;AAAA;AAAA,MAAeI,IACrB,SAAWJ,GAAAA;AAAAA,SAAqB;AAI/BC;AAAAA,OACS,KAAA,SACV,GAAO,GAAA,GAAS;AAAA,SAIpB,EAAA,MAAqBI,GAAQC,CAAAA;AAAAA;AAAMC,OAAAA,KAAUC,SAEpBF,GAAAA,GAAMC;AAAAA,SAAAA,IAAUE,EAAG,GACtCC,CAAYL;AAAQC;AAAAA,IAAMC,KAAAA,EAAAA,MAAc,UAGZI,OAAOJ;AAHfD,IAGeC,KAAUK,EAAAA,MAAAA,UACpBD,GAAAA;AAJLL,IAIKK,KAAOJ,EAAAA,MAAUM,UAC1CC,IAAsBH;AALFL,IAKEK,KAAOJ,EAAAA,OAAAA,UAC7BQ,WAA+BR;AANXD,IAMWC,KAAAA,EAAUS,OAAO,UACxBL,QAAOJ;AAPXD,IAOWC,KAAUU,EAAAA,OACzCC,UAAqBP,KAAOJ;AARRD,IAQQC,KAAUY,EAAAA,OAEPpB,UAAOQ,OAAUa;AAV5Bd,IAU4Bc,KAAAA,EAAAA,OAEhDC,UAAqBC,OAAOf;AAZRD,IAYQC,KAAUgB,EAAI,OAEZC,UAAS,IAQ7C;AAtB0BlB,IAsB1B,IAASD,EAAQoB,OACf,UAAO,cAAQC;AAvBSpB,IAuBTqB,IAAAA,EAAAA,OAAAC,UAAStB,IAAAA;AAvBAA,IAuBAoB,KAAA,GAAA,SAAAA;AAAAG,SAAAF,EAAAA,GAAAA;AAAAA,SAAA,SAAK3B,GAAY8B;AAAAA,aAS3C,IAAA,UACE,QAAO,IAAA,IAAA,MAAA,IAAAH,IAAAA,IAAAA,IAAAC,CAAAA,GAAIG,IAAIzB,GAAAA,IAAAA,GAAA;AAAA0B,QAAAC,IAAAD,CAAAA,IAAA,UAAAL,CAAAA;AAAA,WAAA,GAAK1B,GAAUwB,GAAW,CAC3C;EAUA;AAAA;AAAA,SAAuBS,GAA8C,GAAA;AAAvCC,SAAiBR,WAAA;AAAA,aAAAA,IAAA,UAAAS,QAAAT,IAAA,IAAGU,MAK9C7C,CAAAA,GAAoB,IAAI,GAG1B,IAAI8C,GAAUV;AAAAA,QACd,CAAA,IAAOU,UACDC,CAAAA;AAAUL,WACV,GAAA,GAAA,CAAOK;EAAAA;AAAY;AAAA,SACrB,EAAA,GAAkBJ,GAAyB;AAAA,MACvCK,IAAcD,UAGdL,SAGQM,KAIVD,UAGN,CAAA,MASF,SAASE,UACP,CAAA,IAAiB;AAAWP,QAAMN,GAAQc,GAAAA,IACKR;AAAY,MAGvDA,IAAW,EAAI;AAInB,SASF,OAAA;AAAA,QAASS,IACP,EAAA,CAAA;AAAMC,QAAmB,OAEzB,KAAA,UAAgCrD;AAAAA,UACNsD,IAA6BC,EAAQ,CAAA;AAGvDxC,YAAMyC,MAAAA,GAAa,CAAA,MACCN,EAAAA,CAAWO,IAEjCA,IACA,IAAA;IAAOA;AAAU,MAAA,CAAA,IAAA;EACjBA;AAAAA,SAAMC;AAAAA;AAAAA,SAAgBlD,GAEtB6C,GAAkB;AAAA,WAERE,IAAYE,GAK5B,IAAA,EAAOJ,QAUT;AAASM,MAAaC,GAAc,CAClC,MAAOA,EAAAA,CAAW,IAAA;AAChB,SAAsCA;AAAY;AAAA,SAGhD,GAASC,GAAAA;AACP,MAAA,IAAO/C,GAAa+C,IAAG;AAGzB,WAAWC,CAAAA,GAAKL,CAAAA,KAAU,GAAA,CAAA;AAAA,MAAA,GACxB,CAAA,MAAeK,MAAKL,QAIAG,CAAM,IAGhC,EAAA,CAAA,IAASG,GAAgB,CACvB,IAAA,KAAO,OAGT,KCzLK,YACL,EACA,gBACA,SACA,EACA,CAAA,IAAA,GACA,CAAA,IAAA,EAAA,CAAA,IACA;AAAA,SACA;AAAA;AACA,SACA,GACA,GAAA,GACA;AAAA,SACA,MACA,QAAA;AAAA,QACA,IAAA,GACA,GAAA,CACA;AAAA,QAAA,GACA;AAAA,UAAA,EAAA;AACA,eACA,EAAA,EAAA,GAAA;AACA,UAAA,OACA,EAAA,SAEA;AACA,eACA,EAAA,EAAA,KACA;IAAA;AAAA,QAAA,GACA,CAAA;EAAA;AACA,WAAA,IACA;AAAA,WACA;EAAA;AAAA,SAEA;AAAA;AAAA,IAAA,KACA,EAAA,CACA,KAAA,QAEA,WACA,WAEA,QACA,WAAA,SACA,SAEA,KAAA,OACA,OACA,OAEA,SAEA,cAEA,QACA,MACA,UACA,UAEA,WAEA,UACA,QAEA,QACA,OAAA,YAEA,WAEA,QACA,YACA,MACA,aACA,OAEA,WACA,OACA,UACA,OACA,OACA,MACA,MAAA,WAEA,MAAA,YAGA,cAGA,UACA,QACA,UACA,QACA,MAAA,MACA,MACA,MAAA,MACA,MACA,QACA,UACA,UAEA,MAAA,QACA,KACA,OACA,SACA,OACA,OACA,SAAA,UAEA,MACA,QACA,OACA,QACA,WAEA,QAEA,YAEA,SAIWC,OACX,QAEA,MAAA,YACA,UACA,UAAA,KACA,WAAA,OACA,YACA,KAAA,MAAA,MACA,QAAA,KACA,QACA,WACA,UACA,UACA,SAEA,UACA,UACA,QACA,UAEA,UACA,SAAA,OACA,WACA,OACA,SACA,SACA,MACA,YACA,YACA,SACA,MAAA,SACA,QACA,MACA,SACA,MACA,KAAA,MACA,OACA,SACA,KAAA,CAAA;AA/HA,IAgIA,KAAA,EACA,CAAA,OACA,KAAA,YAIWC,eACX,gBACA,gBACA,iBACA,oBACA,UACA,YAAA,QACA,QAAA,WACA,UAAA,QACA,KAAA,SACA,YACA,SACA,SACA,QACA,kBACA,UACA,QACA,YACA,SACA,QAAA,WACA,WACA,YACA,kBAAA,QACA,QACA,SACA,UAAA,UAO2B5D,QAC3B,YACA,SACA,QAAA,SACA,QACA,OACA,CAAA;AA5KA,IA4KA,KAAA,EAAA,CAAA,WACA,iBACA,uBACA,eACA,oBAEA,qBAEA,qBAEA,kBACA,gBAEA,WACA,WACA,WACK,WAIL,WACA,kBAEA,WACA,WACA,eAEA,gBACA,YAEA,gBAEA,sBAEA,eAGA,UACA,cAEA,CAAA;AApNA,IAoNA,KACA,EAAA,CAAA,WACA,iBAGA,UACA,WACA,aACA,oBAMW6D,kBAEX,iBACA,iBAEA,iBACA,SACA,aACA,QACA,gBAEA,aACA,WACA,iBACA,UACA,OACD,cAE2B,WCpR1B,KAAA,CAAA;ADgCA,IC/BA,KAAA,EAAA,CAAA,QACA,YAEA,UAAA,WACA,SACA,UAAA,MAAA,cACA,iBAEA,MAAA,MACA,SACA,WACA,YACA,SAAA,QACA,MACA,UACA,SACA,UAEA,QACA,QACA,WACA,UAAA,OACA,SACA,OAAA,UACA,cACA,aAEA,CAAA;ADIA,ICJA,KACA,EAAA,CAAA,WACA,eAAA,cACA,YAAA,aACA,WACA,WACA,UACA,UACA,SACA,aAEA,cACA,kBAGA,eAEA,MAAA,CAAA;ADbA,ICaA,KACA,EAAA,CAAA,OACA,CAAA;ADfA,ICeA,KACA,EAAA,CAAA,UACA,UAEA,SACA,OACA,kBAGA,gBACA,wBAGA,YACA,cAEA,WACA,UACA,WACA,eAEA,eACA,WACA,QACA,SACA,SAAA,SACA,QACA,WACA,YACA,gBAEA,UACA,eAEA,YACA,YAEA,WACA,OAAA,YAEA,2BAGA,yBAGA,YACA,aAEA,WACA,gBAEA,QACA,OACA,WACA,UACA,UACA,QACA,QACA,YACA,MACA,aAIA,aACA,SAAA,QACA,SACA,QAAA,QAAA,WACA,QACA,OAAA,OACA,aACA,SACA,UAAA,OACA,aAAA,YAEA,SACA,QACA,SAEA,WAAA,cACA,UACA,QACA,WACA,WAAA,eACA,eAAA,UACA,WACA,WAAA,cAEA,YAGA,OACA,YAAA,OACA,YACA,QACA,QACA,WACA,cACA,SACA,YAEA,SAAA,QACA,SACA,QACA,WAAA,SACA,OACA,UAAA,QACA,SAAA,WACA,YACA,SAAA,aACA,QACA,UACA,UAAA,SACA,SACA,SAEA,MACA,CAAA;ADrIA,ICqIA,KACA,EAAA,CAAA,iBAEA,cAAA,YACA,sBAEA,UAEA,iBACA,iBAGA,WAEA,iBAGA,kBACA,SACA,QAAA,MACA,SACA,QACA,iBACA,aAAA,aACA,SACA,uBACA,+BAGA,iBACA,mBACA,MACA,MAAA,KAAA,MACA,MAAA,mBACA,aAEA,WA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",
  "names": ["import_react", "entries", "setPrototypeOf", "isFrozen", "getPrototypeOf", "getOwnPropertyDescriptor", "freeze", "seal", "create", "Object", "apply", "construct", "Reflect", "x", "thisValue", "unapply", "Array", "prototype", "forEach", "pop", "arrayPush", "String", "toLowerCase", "toString", "stringMatch", "stringReplace", "replace", "indexOf", "stringTrim", "trim", "hasOwnProperty", "regExpTest", "RegExp", "test", "TypeError", "func", "_len", "arguments", "length", "_key", "thisArg", "args", "_key2", "_len2", "array", "transformCaseFunc", "undefined", "stringToLowerCase", "l", "element", "lcElement", "cleanArray", "index", "clone", "newObject", "objectHasOwnProperty", "property", "isArray", "value", "constructor", "lookupGetter", "object", "get", "desc", "fallbackValue", "svg", "svgFilters", "mathMlDisallowed", "xml", "ARIA_ATTR", "ATTR_WHITESPACE", "trustedTypes", "createPolicy", "purifyHostElement", "hasAttribute", "getAttribute", "createHTML", "createScriptURL", "console", "createDOMPurify", "window", "VERSION", "DOMPurify", "removed", "document", "currentScript", "DocumentFragment", "HTMLTemplateElement", "Node", "Element", "NodeFilter", "NamedNodeMap", "MozNamedAttrMap", "HTMLFormElement", "DOMParser", "ElementPrototype", "getChildNodes", "getParentNode", "createElement", "template", "content", "ownerDocument", "emptyHTML", "implementation", "createNodeIterator", "createDocumentFragment", "getElementsByTagName", "importNode", "hooks", "isSupported", "createHTMLDocument", "MUSTACHE_EXPR", "ERB_EXPR", "TMPLIT_EXPR", "DATA_ATTR", "CUSTOM_ELEMENT", "EXPRESSIONS", "IS_ALLOWED_URI", "ALLOWED_TAGS", "addToSet", "TAGS", "ATTRS", "tagNameCheck", "writable", "configurable", "enumerable", "attributeNameCheck", "allowCustomizedBuiltInElements", "FORBID_TAGS", "ALLOW_ARIA_ATTR", "ALLOW_DATA_ATTR", "SAFE_FOR_TEMPLATES", "SANITIZE_DOM", "SANITIZE_NAMED_PROPS_PREFIX", "KEEP_CONTENT", "IN_PLACE", "USE_PROFILES", "DEFAULT_DATA_URI_TAGS", "MATHML_NAMESPACE", "SVG_NAMESPACE", "PARSER_MEDIA_TYPE", "formElement", "testValue", "Function", "_parseConfig", "cfg", "CONFIG", "ALLOWED_ATTR", "ALLOWED_NAMESPACES", "URI_SAFE_ATTRIBUTES", "ADD_URI_SAFE_ATTR", "DEFAULT_URI_SAFE_ATTRIBUTES", "ADD_DATA_URI_TAGS", "FORBID_CONTENTS", "FORBID_ATTR", "ALLOW_UNKNOWN_PROTOCOLS", "ALLOW_SELF_CLOSE_IN_ATTR", "WHOLE_DOCUMENT", "RETURN_DOM", "RETURN_DOM_FRAGMENT", "RETURN_TRUSTED_TYPE", "FORCE_BODY", "NAMESPACE", "HTML_NAMESPACE", "CUSTOM_ELEMENT_HANDLING", "html", "mathMl", "ADD_TAGS", "ADD_ATTR", "DEFAULT_ALLOWED_ATTR", "DEFAULT_FORBID_CONTENTS", "table", "TRUSTED_TYPES_POLICY", "typeErrorCreate", "trustedTypesPolicy", "MATHML_TEXT_INTEGRATION_POINTS", "ALL_SVG_TAGS", "ALL_MATHML_TAGS", "tagName", "namespaceURI", "Boolean", "COMMON_SVG_AND_HTML_ELEMENTS", "node", "removeChild", "_", "remove", "_removeAttribute", "attribute", "getAttributeNode", "from", "removeAttribute", "name", "setAttribute", "_initDocument", "dirty", "matches", "leadingWhitespace", "parseFromString", "documentElement", "body", "childNodes", "doc", "_createNodeIterator", "root", "SHOW_ELEMENT", "SHOW_COMMENT", "SHOW_TEXT", "SHOW_PROCESSING_INSTRUCTION", "_isClobbered", "elm", "nodeName", "textContent", "attributes", "insertBefore", "hasChildNodes", "_isNode", "_executeHook", "entryPoint", "hook", "call", "data", "_sanitizeElements", "_forceRemove", "allowedTags", "firstElementChild", "innerHTML", "parentNode", "currentNode", "childCount", "i", "getNextSibling", "_checkValidNamespace", "nodeType", "arrayForEach", "expr", "cloneNode", "lcName", "_isBasicCustomElement", "lcTag", "stringIndexOf", "attrName", "attrValue", "keepAttr", "allowedAttributes", "hookEvent", "forceKeepAttr", "getAttributeType", "setAttributeNS", "_sanitizeShadowDOM", "shadowNode", "fragment", "nextNode", "_sanitizeAttributes", "sanitize", "IS_EMPTY_INPUT", "SET_CONFIG", "importedNode", "firstChild", "appendChild", "returnNode", "shadowroot", "shadowrootmode", "originalDocument", "outerHTML", "doctype", "serializedHTML", "setConfig", "clearConfig", "isValidAttribute", "addHook", "hookFunction", "removeHook", "arrayPop", "removeHooks", "removeAllHooks", "React", "type", "WarningIcon", "Loader", "SuccessIcon", "tt", "isDocumentHidden", "Observer", "subscriber", "Ge", "_a", "rest", "toastsCounter", "toast", "id", "dismissible", "message", "promise", "response", "shouldDismiss", "description", "error", "jsx", "ToastState", "style", "insertAt", "head", "isAction", "action", "TOAST_LIFETIME", "SWIPE_THRESHOLD", "TIME_BEFORE_UNMOUNT", "_cn", "Toast", "_b", "_c", "_d", "_e", "_g", "visibleToasts", "closeButtonFromToaster", "cancelButtonStyle", "className", "position", "pauseWhenPageIsHidden", "cn", "swiping", "offsetBeforeRemove", "initialHeight", "dragStartTime", "toastRef", "isFront", "isVisible", "toastType", "toastClassname", "heightIndex", "height", "heights", "closeButton", "duration", "offset", "y", "toastsHeightBefore", "reducerIndex", "prev", "curr", "ToasterInvert", "disabled", "setMounted", "toastNode", "newHeight", "setInitialHeight", "deleteToast", "setRemoved", "setHeights", "remainingTime", "lastCloseTimerStartTimeRef", "closeTimerStartTimeRef", "interacting", "expandByDefault", "h", "getLoadingIcon", "icons", "loadingIconProp", "sanitizeHTML", "classNames", "unstyled", "mounted", "invert", "expanded", "toasts", "event", "setSwiping", "pointerStartRef", "timeTaken", "velocity", "setSwipeOut", "clampedY", "yPosition", "swipeStartThreshold", "closeButtonAriaLabel", "getAsset", "toastDescriptionClassname", "_f", "actionButtonStyle", "getDocumentDirection", "dirAttribute", "Toaster", "richColors", "VISIBLE_TOASTS_AMOUNT", "toastOptions", "dir", "loadingIcon", "props", "setToasts", "actualTheme", "lastFocusedElementRef", "t", "indexOfExistingToast", "key", "setExpanded", "listRef", "handleKeyDown", "hotkey", "containerAriaLabel", "hotkeyLabel", "_n", "TOAST_WIDTH", "gap", "isFocusWithinRef", "setInteracting", "removeToast"]
}
